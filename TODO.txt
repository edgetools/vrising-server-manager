(in-progress) TODO^: overhaul DoCommands to use process monitors /  watchers
      - rather than commands, launch a process monitor
      - runs a loop, sleeps every second, then checks the command queue
      - if the command queue goes empty and the server is stopped, stop the process monitor
      - if the process monitor isn't started when a command is issued, start the process monitor
      - if a command is in the queue (file), pulls it off the top, processes it, then writes the removal once it finishes
      - kill commands for update/start will still directly target the underlying process
      - stop commands will issue a command in the commandqueue
      - can also stop additional commands in the queue by disabling the server
      TODO: wait for commands to finish (start to start, stop to exit, update to exit) and grab exit codes

TODO: add a Wait-VRisingServer (vrwait) command
      - checks if a command is running
      - throws error if the current or last command error'd
      - waits for command to finish
      - waits for certain conditions based on last command
      - Start
        - waits until IsRunning()
      - Stop
        - waits until IsStopped()

TODO(?): output server object on each command for chaining, e.g.:
         - vrget foo | vrannounce "stopping server for update" | vrstop | vrwait | vrupdate | vrwait | vrstart | vrwait | vrannounce "server update complete"

TODO: rotate existing log on start

TODO: add update on restart (enhance Start command)

TODO: add RCU support
TODO: add vrannounce
TODO: add auto-announcerestart on restarts

TODO: add date to lastupdate

TODO: check process name as a safety measure

TODO: zip/prune extra log files on rotation

TODO: install steamcmd / rcu for the user

TODO: CI Planning

on every PR ->
  <- run tests

on every commit to Main ->
  <- run tests
  <- 

use semantic-release:
- https://github.com/semantic-release/semantic-release/blob/master/docs/support/FAQ.md#can-i-use-semantic-release-to-publish-non-javascript-packages
- use a docker image with npm already installed (latest LTS), and then just install the package on demand
  - https://github.com/semantic-release/semantic-release/blob/master/docs/usage/installation.md#global-installation
- disable npm plugin (@semantic-release/npm) and enable one for my workflow
- customizable env vars:
  - https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#git-environment-variables

TODO: with local environment, test out getting the exec plugin to:
- update the moduleManifest with the version and release notes

https://github.com/semantic-release/semantic-release/blob/master/docs/developer-guide/js-api.md#result
